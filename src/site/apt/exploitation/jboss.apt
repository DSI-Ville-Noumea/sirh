 -----
 SIRH
 -----
 Adrien SALES
 -----
  15/05/2012
  
Procédures

* Installation de JBoss en standalone, base de données AS400

** Packaging du driver jt400

	Pour permettre l'autoloading dans Java 1.6, il faut modifier le jar en ajoutant un fichier. Il suffit de
	suivre la démarche suivante depuis un shell linux, <<dans une seule et même session>> :
	
+------------------------------------------+
cd
mkdir jt400_autoloading ; cd jt400_autoloading
export JT400_version="6.7"
export CLASSNAME="com.ibm.as400.access.AS400JDBCDriver"
wget -U NoSuchBrowser/1.0 http://repo1.maven.org/maven2/net/sf/jt400/jt400/$JT400_version/jt400-$JT400_version.jar
cp jt400-$JT400_version.jar jt400-$JT400_version-autoloader.jar.tmp
mkdir META-INF
mkdir META-INF/services
echo "$CLASSNAME" > META-INF/services/java.sql.Driver
jar -uf jt400-$JT400_version-autoloader.jar.tmp META-INF/services/java.sql.Driver
mv jt400-$JT400_version-autoloader.jar.tmp jt400-$JT400_version-autoloader.jar

md5sum jt400-$JT400_version-autoloader.jar > jt400-$JT400_version-autoloader.jar.md5
+------------------------------------------+	

	A ce stade, ça y est, nous disponsons du jar du driver prêt à l'emploi.

** Installation du driver


	Sous linux :
	
+------------------------------------------+
export JBOSS_HOME=/opt/jboss-as-7.1.1.Final/
cd $JBOSS_HOME/modules
mkdir net
mkdir net/sf
mkdir net/sf/jt400
mkdir net/sf/jt400/main
cd net/sf/jt400/main
cp $HOME/jt400_autoloading/jt400-$JT400_version-autoloader.jar $JBOSS_HOME/modules/net/sf/jt400/main
+------------------------------------------+

	A ce stade, le driver est bien déposé, il reste à créer le fichier driver <<module.xml>>, <<encodé en UTF-8>>,
	dont voici le contenu <<ATTENTION AU NOM DU FICHIER JAR, ici jt400-6.7-autoloader.jar>>,
	
	
+------------------------------------------+
cd $JBOSS_HOME/modules/net/sf/jt400/main
sudo vim module.xml
+------------------------------------------+

	Le contenu de module.xml :
	
+------------------------------------------+
<!--
  ~ JBoss, Home of Professional Open Source.
  ~ Copyright 2010, Red Hat, Inc., and individual contributors
  ~ as indicated by the @author tags. See the copyright.txt file in the
  ~ distribution for a full listing of individual contributors.
  ~
  ~ This is free software; you can redistribute it and/or modify it
  ~ under the terms of the GNU Lesser General Public License as
  ~ published by the Free Software Foundation; either version 2.1 of
  ~ the License, or (at your option) any later version.
  ~
  ~ This software is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  ~ Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public
  ~ License along with this software; if not, write to the Free
  ~ Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
  ~ 02110-1301 USA, or see the FSF site: http://www.fsf.org.
  -->

<module xmlns="urn:jboss:module:1.0" name="net.sf.jt400">
  <resources>
    <resource-root path="jt400-6.7-autoloader.jar"/>
  </resources>
  <dependencies>
    <module name="javax.api"/>
    <module name="javax.transaction.api"/>
  </dependencies>
</module>	
+------------------------------------------+


** Ajout du datasource

	Ici, le mode standalone a été choisi, <<les fichiers de conf sont donc ceux du mode standalone>>.
	
	Se positionner dans le répertoire suivant :
	
+------------------------------------------+
cd $JBOSS_HOME/standalone/configuration	; ls -la
+------------------------------------------+

	Ajouter ensuite le datasource visant l'AS400, éditer le fichier :
	
+------------------------------------------+
sudo vim standalone.xml
+------------------------------------------+

    Ajouter, sous le noeud :
	
+------------------------------------------+
server/profile/ <subsystem xmlns="urn:jboss:domain:datasources:1.0">/datasources
+------------------------------------------+	

	le contenu suivant :
	
+------------------------------------------+
<datasource jndi-name="java:/jdbc/noumea" pool-name="NOUMEA" enabled="true" use-java-context="true">
                    <connection-url>jdbc:as400://NOUMEA</connection-url>
                    <driver-class>com.ibm.as400.access.AS400JDBCDriver</driver-class>
                    <connection-property name="dateFormat">iso</connection-property>
                    <connection-property name="libraries">ITDATA,GDATA,GHIST,GCOMMON,VAIMODSDTA,R35FILES,VBLIB,WEBAPPS,WEBFINRPT1,WEBFINRPT8,QGPL,WWDATA,CSDATA</connection-property>
                    <driver>net.sf.jt400</driver>
                    <pool>
                        <min-pool-size>10</min-pool-size>
                        <max-pool-size>100</max-pool-size>
                        <prefill>true</prefill>
                    </pool>
                    <security>
                        <user-name>adminwas</user-name>
                        <password>***REMOVED***</password>
                    </security>
                    <statement>
                        <prepared-statement-cache-size>32</prepared-statement-cache-size>
                        <share-prepared-statements>true</share-prepared-statements>
                    </statement>
</datasource>
+------------------------------------------+

	Puis, ajouter la référence au driver, sous le neoud suivant :
	
+------------------------------------------+
server/profile/<subsystem xmlns="urn:jboss:domain:datasources:1.0">/datasources/drivers
+------------------------------------------+
	
	Le contenu suivant :
	
+------------------------------------------+
<driver name="net.sf.jt400" module="net.sf.jt400"/>
+------------------------------------------+
	
	Reste ensuite à tester le datasource, via la console d'admin (https://localhost:9990), ou en command line, par
	exemple sur le serveur même	:
	
+------------------------------------------+
cd $JBOSS_HOME/bin
# lance l'outil d'admin ligne de commande de JBoss
# Fournir les login/mdp d'un user admin de JBoss
./jboss-cli.sh --connect

# Liste les drivers installés
/subsystem=datasources:installed-drivers-list

# Test le datasource NOUMEA
/subsystem=datasources/data-source=NOUMEA:test-connection-in-pool
+------------------------------------------+


	En sortie on doit avoir :

+------------------------------------------+
{
    "outcome" => "success",
    "result" => [true]
}
+------------------------------------------+

	A ce stade	le driver et le datasource sont tous deux correctement configurés, il ne reste plus
	qu'à déployer l'EAR.
	
	
* Déployer SIRH
	
	Pour déployer, rien de plus simple : copier l'EAR dans le répertoire adéquat de JBoss : 
	
+------------------------------------------+
$JBOSS_HOME/standalone/configuration/deployments
+------------------------------------------+	

	Monitorer le serveur afin de vérifier le déploiement de l'EAR :
	
+------------------------------------------+
 tail -f $JBOSS_HOME/standalone/log/server.log
+------------------------------------------+	


** Debug sous JBOSS

	Pour faire du debug, il faut décommenter une ligne du fichier $JBOSS_HOME\bin\standalone.conf.bat
	
	Ligne à décommenter :
	
+------------------------------------------+
rem set "JAVA_OPTS=%JAVA_OPTS% -Xrunjdwp:transport=dt_socket,address=8787,server=y,suspend=n"
+------------------------------------------+
	
	Reste ensuite à lancer le debug depuis eclipse ou autre sur le port 8787.

